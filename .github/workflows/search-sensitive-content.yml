name: GitHub Code Search for Sensitive Content

on:
  workflow_dispatch:
    inputs:
      search_scope:
        description: '搜索范围 (user:username 或 org:orgname，留空搜索所有公开仓库)'
        required: false
        default: ''
      max_results:
        description: '最大结果数量'
        required: false
        default: '100'
      search_pattern:
        description: '搜索模式'
        required: false
        default: 'sk-ant-oat01-'
      file_extensions:
        description: '文件扩展名 (如: json,yaml,txt)'
        required: false
        default: 'json'
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点运行

jobs:
  github-code-search:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install requests python-dateutil

    - name: Run GitHub Code Search
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SEARCH_SCOPE: ${{ github.event.inputs.search_scope }}
        MAX_RESULTS: ${{ github.event.inputs.max_results || '100' }}
        SEARCH_PATTERN: ${{ github.event.inputs.search_pattern || 'sk-ant-oat01-' }}
        FILE_EXTENSIONS: ${{ github.event.inputs.file_extensions || 'json' }}
      run: |
        python scripts/github_search.py

    - name: Generate reports
      run: |
        python scripts/generate_reports.py

    - name: Upload search results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: github-code-search-results-${{ github.run_number }}
        path: |
          reports/
        retention-days: 30

    - name: Create security summary
      if: always()
      run: |
        python scripts/create_summary.py

    - name: Security recommendations
      if: always()
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔒 安全建议" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "1. **立即行动**: 如果在公开仓库中发现敏感内容，请立即更换相关的 API 密钥" >> $GITHUB_STEP_SUMMARY
        echo "2. **清理历史**: 使用 git filter-branch 或 BFG Repo-Cleaner 清理 Git 历史记录" >> $GITHUB_STEP_SUMMARY
        echo "3. **联系仓库所有者**: 如果敏感内容在他人仓库中，请联系仓库所有者" >> $GITHUB_STEP_SUMMARY
        echo "4. **启用监控**: 考虑使用 GitHub secret scanning 或其他安全工具" >> $GITHUB_STEP_SUMMARY
        echo "5. **预防措施**: 使用 pre-commit hooks 和 .gitignore 防止未来泄露" >> $GITHUB_STEP_SUMMARY
